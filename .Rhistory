heading.background.color = "#D3D3D3",
column_labels.font.size = "small",
table.width = pct(100)
) %>%
tab_footnote(
footnote = footnote,
locations = cells_title(groups = "title")
)
# Return the gt table
return(gt_table)
}
# Example of calling the function with custom parameters
prettyDHIS2table(DHIS2Data, "Your Custom Title", "Your Custom Subtitle", "Your Custom Footnote")
library(flextable)
library(dplyr)
prettyDHIS2table <- function(df, caption = "Monthly Data Report",footnote = "Source: Your Data Source") {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
theme_box() %>%
autofit()%>%
merge_v(j = ~Measure + Country)  # Merge cells vertically in the 'dataname' column
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
ft_table
library(flextable)
library(dplyr)
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
prettyDHIS2table <- function(df, caption = "Monthly Data Report",footnote = "Source: Your Data Source") {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
theme_box() %>%
autofit()%>%
merge_v(j = ~Measure + Country)  # Merge cells vertically in the 'dataname' column
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
ft_table
library(flextable)
library(dplyr)
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
prettyDHIS2table <- function(df, caption = "Monthly Data Report",footnote = "Source: Your Data Source") {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
theme_box() %>%
autofit()%>%
merge_v(j = ~Measure + Country) %>%  # Merge cells vertically in the 'dataname' column
add_header_row(
x = myft, values = c("some measures", "other measures"),
colwidths = c(3, 2))
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
library(flextable)
library(dplyr)
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
prettyDHIS2table <- function(df, caption = "Monthly Data Report",footnote = "Source: Your Data Source") {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
theme_box() %>%
autofit()%>%
merge_v(j = ~Measure + Country) %>%  # Merge cells vertically in the 'dataname' column
add_header_row(
values = c("some measures", "other measures"),
colwidths = c(3, 2))
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
ft_table
library(flextable)
library(dplyr)
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
prettyDHIS2table <- function(df, caption = "Monthly Data Report",footnote = "Source: Your Data Source", colwidths = c(3, 2)) {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
theme_box() %>%
autofit()%>%
merge_v(j = ~Measure + Country) %>%  # Merge cells vertically in the 'dataname' column
add_header_row(
values = c("some measures", "other measures"),
colwidths = colwidths)
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
ft_table
library(flextable)
library(dplyr)
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
prettyDHIS2table <- function(df,
caption = "Monthly Data Report",
footnote = "Source: Your Data Source",
header_row_values = c("ID", "other measures"),
colwidths = c(3, 2)) {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
theme_box() %>%
autofit()%>%
merge_v(j = ~Measure + Country) %>%  # Merge cells vertically in the 'dataname' column
add_header_row(
values = header_row_values,
colwidths = colwidths)
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
ft_table
library(flextable)
library(dplyr)
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
prettyDHIS2table <- function(df,
caption = "Monthly Data Report",
footnote = "Source: Your Data Source",
header_row_values = c("ID", "other measures"),
colwidths = c(3, 2)) {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
theme_box() %>%
autofit()%>%
merge_v(j = ~Measure + Country) %>%  # Merge cells vertically in the 'dataname' column
add_header_row(
values = header_row_values,
colwidths = colwidths) %>%
theme_vanilla()
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
ft_table
library(flextable)
library(dplyr)
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
prettyDHIS2table <- function(df,
caption = "Monthly Data Report",
footnote = "Source: Your Data Source",
header_row_values = c("ID", "other measures"),
colwidths = c(3, 2)) {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
add_header_lines(
values = c("this is a first line",
"this is a second line") ) %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
theme_box() %>%
autofit()%>%
merge_v(j = ~Measure + Country) %>%  # Merge cells vertically in the 'dataname' column
add_header_row(
values = header_row_values,
colwidths = colwidths) %>%
theme_vanilla()
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
ft_table
library(flextable)
library(dplyr)
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
prettyDHIS2table <- function(df,
caption = "Monthly Data Report",
footnote = "Source: Your Data Source",
header_row_values = c("ID", "other measures"),
colwidths = c(3, 2)) {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
add_header_lines(
values = c("this is a first line",
"this is a second line") ) %>%
autofit()%>%
merge_v(j = ~Measure + Country) %>%  # Merge cells vertically in the 'dataname' column
add_header_row(
values = header_row_values,
colwidths = colwidths) %>%
theme_vanilla()
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
ft_table
library(flextable)
library(dplyr)
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
prettyDHIS2table <- function(df,
caption = "Monthly Data Report",
footnote = "Source: Your Data Source",
header_row_values = c("ID", "other measures"),
colwidths = c(3, 2)) {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
add_header_lines(
values = c("this is a first line") ) %>%
autofit()%>%
merge_v(j = ~Measure + Country) %>%  # Merge cells vertically in the 'dataname' column
add_header_row(
values = header_row_values,
colwidths = colwidths) %>%
theme_vanilla()
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
ft_table
library(flextable)
library(dplyr)
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
prettyDHIS2table <- function(df,
caption = "Monthly Data Report",
footnote = "Source: Your Data Source",
header_row_values = c("ID", "other measures"),
colwidths = c(3, 2)) {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
autofit()%>%
merge_v(j = ~Measure + Country) %>%  # Merge cells vertically in the 'dataname' column
add_header_row(
values = header_row_values,
colwidths = colwidths) %>%
add_header_lines(
values = c("this is a first line") ) %>%
theme_vanilla()
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
ft_table
library(flextable)
library(dplyr)
set_flextable_defaults(
font.size = 10, theme_fun = theme_vanilla,
padding = 6,
background.color = "#EFEFEF")
prettyDHIS2table <- function(df,
caption = "Monthly Data Report",
footnote = "Source: Your Data Source",
header_row_values = c("ID", "other measures"),
colwidths = c(3, 2)) {
# Prepare the data frame, assuming df is already imported
df_prepared <- df %>%
select(-c(dataid, datacode, datadescription, organisationunitid, organisationunitdescription, organisationunitcode, orgunitlevel2)) %>%
group_by(dataname, organisationunitname) %>%
rename("Measure"=dataname, "Country" = orgunitlevel1, "Organizational Unit Name" = organisationunitname)
# First replace "..." with " - ", then replace remaining "." with " "
colnames(df_prepared) <- gsub("\\.\\.\\.", " - ", colnames(df_prepared))
colnames(df_prepared) <- gsub("\\.", " ", colnames(df_prepared))
# Create the flextable
ft <- df_prepared %>%
flextable() %>%
set_caption(caption = caption) %>%
add_footer_lines(footnote) %>%
autofit()%>%
merge_v(j = ~Measure + Country) %>%  # Merge cells vertically in the 'dataname' column
add_header_row(
values = header_row_values,
colwidths = colwidths) %>%
add_header_lines(
values = c(caption) ) %>%
theme_vanilla()
# Add a footnote
ft <- tryCatch({
ft <- ft %>% footnote_general(content = footnote, ref_symbols = "*")
return(ft)
}, error = function(e) {
message("Error adding footnote, proceeding without it: ", e$message)
return(ft)
})
return(ft)
}
# Example of how to call the function with custom parameters
ft_table <- prettyDHIS2table(DHIS2Data, "Your Custom Title",  "Your Custom Footnote")
ft_table
